section text

// n -> n
factorial
{
  decl n

  l:n
  read                  // n

  decl x
  l:x
  drop

  0                     // n 0
  icmp                  // (n `cmp` 0)
  jle exit1             //

  l:n
  read                  // n
  l:n
  read                  // n n
  1                     // n (n-1)
  isub
  call Main.t:factorial // n (fac (n-1))
  imul                  // n*(fac (n-1))
  ret

.exit1:
  1
  ret
}

fibonacci
{
  decl n

  l:n
  read             // n
  0                // n
  icmp
  jeq exit0        // n
  1                // n 1
  icmp             // n`cmp`1
  jeq exit1        //

  l:n
  read             // n
  1                // n-1
  isub
  call t:fibonacci // f(n-1)

  l:n
  read          // f(n-1) n
  2
  isub             // f(n-1) (n-1)
  call t:fibonacci // f(n-1) f(n-2)
  iadd             // f(n-1) + f(n-2)

.exit1:
  1
.exit0:
  ret
}

main
{
  d:n
  read             // 5
  call t:fibonacci // fib(5)
  call t:factorial // fac(fib(5))

  d:exitCode
  read               // fac(fib(5)) 0
  ret
}

/*
fromList
  [ ( QLabel
        { labelQualifier = [ "Main" ]
        , labelSection = Text
        , labelName = "factorial"
        , labelRelative = Nothing
        }
    , Node
        (TextCode
           FunctionDef
             { functionName =
                 QLabel
                   { labelQualifier = [ "Main" ]
                   , labelSection = Text
                   , labelName = "factorial"
                   , labelRelative = Nothing
                   }
             , functionScope = fromList [ ( "n" , 0 ) , ( "x" , 1 ) ]
             , functionInsts =
                 fromList
                   [ ( 0 , Nullary Decl )
                   , ( 1 , Unary Push (OperandAddress (Numeric Local 0)) )
                   , ( 2 , Nullary Read )
                   , ( 3 , Nullary Decl )
                   , ( 4 , Unary Push (OperandAddress (Numeric Local 1)) )
                   , ( 5 , Nullary Drop )
                   , ( 6 , Unary Push (OperandNumber 0) )
                   , ( 7 , Nullary Icmp )
                   , ( 8
                     , Unary
                         Jle
                         (OperandAddress
                            (Symbolic
                               QLabel
                                 { labelQualifier = [ "Main" ]
                                 , labelSection = Text
                                 , labelName = "factorial"
                                 , labelRelative = Just "exit1"
                                 }))
                     )
                   , ( 9 , Unary Push (OperandAddress (Numeric Local 0)) )
                   , ( 10 , Nullary Read )
                   , ( 11 , Unary Push (OperandAddress (Numeric Local 0)) )
                   , ( 12 , Nullary Read )
                   , ( 13 , Unary Push (OperandNumber 1) )
                   , ( 14 , Nullary Isub )
                   , ( 15
                     , Unary
                         Call
                         (OperandAddress
                            (Symbolic
                               QLabel
                                 { labelQualifier = [ "Main" ]
                                 , labelSection = Text
                                 , labelName = "factorial"
                                 , labelRelative = Nothing
                                 }))
                     )
                   , ( 16 , Nullary Imul )
                   , ( 17 , Nullary Ret )
                   , ( 18 , Unary Push (OperandNumber 1) )
                   , ( 19 , Nullary Ret )
                   ]
             , functionLabels = fromList [ ( "exit1" , 18 ) ]
             , functionDeps =
                 fromList
                   [ QLabel
                       { labelQualifier = [ "Main" ]
                       , labelSection = Text
                       , labelName = "factorial"
                       , labelRelative = Nothing
                       }
                   ]
             , functionUnresolved = fromList [ 8 , 15 ]
             })
        (fromList
           [ QLabel
               { labelQualifier = [ "Main" ]
               , labelSection = Text
               , labelName = "factorial"
               , labelRelative = Nothing
               }
           ])
    )
  , ( QLabel
        { labelQualifier = [ "Main" ]
        , labelSection = Text
        , labelName = "fibonacci"
        , labelRelative = Nothing
        }
    , Node
        (TextCode
           FunctionDef
             { functionName =
                 QLabel
                   { labelQualifier = [ "Main" ]
                   , labelSection = Text
                   , labelName = "fibonacci"
                   , labelRelative = Nothing
                   }
             , functionScope = fromList [ ( "n" , 0 ) ]
             , functionInsts =
                 fromList
                   [ ( 0 , Nullary Decl )
                   , ( 1 , Unary Push (OperandAddress (Numeric Local 0)) )
                   , ( 2 , Nullary Read )
                   , ( 3 , Unary Push (OperandNumber 0) )
                   , ( 4 , Nullary Icmp )
                   , ( 5
                     , Unary
                         Jeq
                         (OperandAddress
                            (Symbolic
                               QLabel
                                 { labelQualifier = [ "Main" ]
                                 , labelSection = Text
                                 , labelName = "fibonacci"
                                 , labelRelative = Just "exit0"
                                 }))
                     )
                   , ( 6 , Unary Push (OperandNumber 1) )
                   , ( 7 , Nullary Icmp )
                   , ( 8
                     , Unary
                         Jeq
                         (OperandAddress
                            (Symbolic
                               QLabel
                                 { labelQualifier = [ "Main" ]
                                 , labelSection = Text
                                 , labelName = "fibonacci"
                                 , labelRelative = Just "exit1"
                                 }))
                     )
                   , ( 9 , Unary Push (OperandAddress (Numeric Local 0)) )
                   , ( 10 , Nullary Read )
                   , ( 11 , Unary Push (OperandNumber 1) )
                   , ( 12 , Nullary Isub )
                   , ( 13
                     , Unary
                         Call
                         (OperandAddress
                            (Symbolic
                               QLabel
                                 { labelQualifier = [ "Main" ]
                                 , labelSection = Text
                                 , labelName = "fibonacci"
                                 , labelRelative = Nothing
                                 }))
                     )
                   , ( 14 , Unary Push (OperandAddress (Numeric Local 0)) )
                   , ( 15 , Nullary Read )
                   , ( 16 , Unary Push (OperandNumber 2) )
                   , ( 17 , Nullary Isub )
                   , ( 18
                     , Unary
                         Call
                         (OperandAddress
                            (Symbolic
                               QLabel
                                 { labelQualifier = [ "Main" ]
                                 , labelSection = Text
                                 , labelName = "fibonacci"
                                 , labelRelative = Nothing
                                 }))
                     )
                   , ( 19 , Nullary Iadd )
                   , ( 20 , Unary Push (OperandNumber 1) )
                   , ( 21 , Nullary Ret )
                   ]
             , functionLabels = fromList [ ( "exit0" , 21 ) , ( "exit1" , 20 ) ]
             , functionDeps =
                 fromList
                   [ QLabel
                       { labelQualifier = [ "Main" ]
                       , labelSection = Text
                       , labelName = "fibonacci"
                       , labelRelative = Nothing
                       }
                   ]
             , functionUnresolved = fromList [ 5 , 8 , 13 , 18 ]
             })
        (fromList
           [ QLabel
               { labelQualifier = [ "Main" ]
               , labelSection = Text
               , labelName = "fibonacci"
               , labelRelative = Nothing
               }
           ])
    )
  , ( QLabel
        { labelQualifier = [ "Main" ]
        , labelSection = Text
        , labelName = "main"
        , labelRelative = Nothing
        }
    , Node
        (TextCode
           FunctionDef
             { functionName =
                 QLabel
                   { labelQualifier = [ "Main" ]
                   , labelSection = Text
                   , labelName = "main"
                   , labelRelative = Nothing
                   }
             , functionScope = fromList []
             , functionInsts =
                 fromList
                   [ ( 0
                     , Unary
                         Push
                         (OperandAddress
                            (Symbolic
                               QLabel
                                 { labelQualifier = [ "Main" ]
                                 , labelSection = Data
                                 , labelName = "n"
                                 , labelRelative = Nothing
                                 }))
                     )
                   , ( 1 , Nullary Read )
                   , ( 2
                     , Unary
                         Call
                         (OperandAddress
                            (Symbolic
                               QLabel
                                 { labelQualifier = [ "Main" ]
                                 , labelSection = Text
                                 , labelName = "fibonacci"
                                 , labelRelative = Nothing
                                 }))
                     )
                   , ( 3
                     , Unary
                         Call
                         (OperandAddress
                            (Symbolic
                               QLabel
                                 { labelQualifier = [ "Main" ]
                                 , labelSection = Text
                                 , labelName = "factorial"
                                 , labelRelative = Nothing
                                 }))
                     )
                   , ( 4
                     , Unary
                         Push
                         (OperandAddress
                            (Symbolic
                               QLabel
                                 { labelQualifier = [ "Main" ]
                                 , labelSection = Data
                                 , labelName = "exitCode"
                                 , labelRelative = Nothing
                                 }))
                     )
                   , ( 5 , Nullary Read )
                   , ( 6 , Nullary Ret )
                   ]
             , functionLabels = fromList []
             , functionDeps =
                 fromList
                   [ QLabel
                       { labelQualifier = [ "Main" ]
                       , labelSection = Data
                       , labelName = "exitCode"
                       , labelRelative = Nothing
                       }
                   , QLabel
                       { labelQualifier = [ "Main" ]
                       , labelSection = Data
                       , labelName = "n"
                       , labelRelative = Nothing
                       }
                   , QLabel
                       { labelQualifier = [ "Main" ]
                       , labelSection = Text
                       , labelName = "factorial"
                       , labelRelative = Nothing
                       }
                   , QLabel
                       { labelQualifier = [ "Main" ]
                       , labelSection = Text
                       , labelName = "fibonacci"
                       , labelRelative = Nothing
                       }
                   ]
             , functionUnresolved = fromList [ 0 , 2 , 3 , 4 ]
             })
        (fromList
           [ QLabel
               { labelQualifier = [ "Main" ]
               , labelSection = Data
               , labelName = "exitCode"
               , labelRelative = Nothing
               }
           , QLabel
               { labelQualifier = [ "Main" ]
               , labelSection = Data
               , labelName = "n"
               , labelRelative = Nothing
               }
           , QLabel
               { labelQualifier = [ "Main" ]
               , labelSection = Text
               , labelName = "factorial"
               , labelRelative = Nothing
               }
           , QLabel
               { labelQualifier = [ "Main" ]
               , labelSection = Text
               , labelName = "fibonacci"
               , labelRelative = Nothing
               }
           ])
    )
  ]
*/
